<dependencies>
    <!-- Spring Boot Starter Web -->
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <!-- Spring Boot Starter Data JPA -->
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>

    <!-- H2 Database -->
    <dependency>
        <groupId>com.h2database</groupId>
        <artifactId>h2</artifactId>
        <scope>runtime</scope>
    </dependency>

    <!-- Spring Boot Starter Validation (optional, for validation annotations) -->
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
</dependencies>


spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
spring.jpa.show-sql=true

//entity
package com.example.demo.entity;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;

@Entity
@Table(name = "user_device_table")
public class UserDevice {
    
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    
    private String userId;
    private String deviceToken;
    private String deviceType;
    private String osVer;
    private String appVer;

   }


//dto
package com.example.demo.dto;

import jakarta.validation.constraints.NotBlank;

public class UserDeviceDTO {

    @NotBlank
    private String userId;
    @NotBlank
    private String deviceToken;
    @NotBlank
    private String deviceType;
    @NotBlank
    private String osVer;
    @NotBlank
    private String appVer;

    // Getters and Setters
    public String getUserId() {
        return userId;
    }

    public void setUserId(String userId) {
        this.userId = userId;
    }

    public String getDeviceToken() {
        return deviceToken;
    }

    public void setDeviceToken(String deviceToken) {
        this.deviceToken = deviceToken;
    }

    public String getDeviceType() {
        return deviceType;
    }

    public void setDeviceType(String deviceType) {
        this.deviceType = deviceType;
    }

    public String getOsVer() {
        return osVer;
    }

    public void setOsVer(String osVer) {
        this.osVer = osVer;
    }

    public String getAppVer() {
        return appVer;
    }

    public void setAppVer(String appVer) {
        this.appVer = appVer;
    }
}
//repo
package com.example.demo.repository;

import com.example.demo.entity.UserDevice;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

@Repository
public interface UserDeviceRepository extends JpaRepository<UserDevice, Long> {
}


//svc
package com.example.demo.service;

import com.example.demo.dto.UserDeviceDTO;
import com.example.demo.entity.UserDevice;
import com.example.demo.repository.UserDeviceRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class UserDeviceService {

    @Autowired
    private UserDeviceRepository userDeviceRepository;

    public UserDevice registerUserDevice(UserDeviceDTO userDeviceDTO) {
        UserDevice userDevice = new UserDevice();
        userDevice.setUserId(userDeviceDTO.getUserId());
        userDevice.setDeviceToken(userDeviceDTO.getDeviceToken());
        userDevice.setDeviceType(userDeviceDTO.getDeviceType());
        userDevice.setOsVer(userDeviceDTO.getOsVer());
        userDevice.setAppVer(userDeviceDTO.getAppVer());

        return userDeviceRepository.save(userDevice);
    }
}
//cnt
package com.example.demo.controller;

import com.example.demo.dto.UserDeviceDTO;
import com.example.demo.entity.UserDevice;
import com.example.demo.service.UserDeviceService;
import jakarta.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/not/dev")
public class UserDeviceController {

    @Autowired
    private UserDeviceService userDeviceService;

    @PostMapping("/reg")
    public ResponseEntity<UserDevice> registerUserDevice(@Valid @RequestBody UserDeviceDTO userDeviceDTO) {
        UserDevice savedUserDevice = userDeviceService.registerUserDevice(userDeviceDTO);
        return ResponseEntity.ok(savedUserDevice);
    }
}
//payload
{
  "userId": "user123",
  "deviceToken": "token456",
  "deviceType": "iOS",
  "osVer": "14.4",
  "appVer": "1.0.0"
}

